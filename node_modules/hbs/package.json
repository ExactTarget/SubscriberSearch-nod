{
  "name": "hbs",
  "description": "Express.js template engine plugin for Handlebars",
  "version": "1.0.5",
  "homepage": "https://github.com/donpark/hbs",
  "author": {
    "name": "Don Park",
    "email": "donpark@docuverse.com",
    "url": "http://blog.docuverse.com"
  },
  "main": "lib/hbs.js",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "handlebars": "1.0.5beta"
  },
  "devDependencies": {
    "mocha": "1.2.x",
    "npm": "*",
    "request": ">=2.9.202"
  },
  "scripts": {
    "test": "mocha"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "optionalDependencies": {},
  "readme": "# hbs [![Build Status](https://secure.travis-ci.org/donpark/hbs.png)](http://travis-ci.org/donpark/hbs) #\n\n[Express.js](http://github.com/visionmedia/express) view engine for\n[handlebars.js](http://github.com/wycats/handlebars.js)\n\n## Why ##\n\nBecause Handlebars.js is a nifty and simple templating language and makes a great fit for express templates.\n\n## Installation ##\n\n```\nnpm install hbs\n```\n\n## Usage ##\n\nUsing *hbs* as the default view engine requires just one line of code in your app setup. This will render `.hbs` files when `res.render` is called.\n\n```javascript\napp.set('view engine', 'hbs');\n```\n\nTo use a different extension (i.e. html) for your template files:\n\n```javascript\napp.set('view engine', 'html');\napp.engine('html', require('hbs').__express);\n```\n\n## Helpers and Partials ##\n\nhbs exposes the `registerHelper` and `registerPartial` method from handlebars.\n\n```javascript\nvar hbs = require('hbs');\n\nhbs.registerHelper('helper_name', function(...) { ... });\nhbs.registerPartial('partial_name', 'partial value');\n```\n\nSee the [handlebars.js](http://github.com/wycats/handlebars.js) README and docs for more information.\n\n## Recipes ##\n\n### extra scripts or styles\n\nSometimes it is useful to have custom scripts or stylesheets on your pages. Handlebars does not provide a way to import or extend a template, but through the use of helpers you can create a similar result.\n\nWe can take advantage of the fact that our body template is processed before the layout template. Knowing this, we can create two helpers `block` and `extend` which can be used to 'inject' custom stylesheets or scripts into the layout template. The `block` helper will act as a placeholder for values specified in earlier `extend` helpers.\n\nSee examples/extend for a working example. Note how the index.hbs file defines extra stylesheets and scripts to be injected into the layout. They are put into the head section and at the end of the body respectively. If this was not done, the stylesheet would be in the body and the script would print `foo bar` too soon.\n\n",
  "_id": "hbs@1.0.5",
  "dist": {
    "shasum": "fcd915375e4c7fed6e3ecdff7a84999797509033"
  },
  "_from": "hbs"
}
